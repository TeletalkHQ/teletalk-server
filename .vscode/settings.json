{
  "editor.codeActionsOnSave": {
    // "source.fixAll": true,
    // "source.sortImports": true
  },
  "editor.tabSize": 2,
  "explorerExclude.backup": {},
  "files.eol": "\n",
  "files.exclude": {
    "**/.git": false,
    "**/.svn": false,
    "**/.hg": false,
    "**/CVS": false,
    "**/.DS_Store": false,
    "**/Thumbs.db": false,
    ".dccache": false,
    ".dockerignore": false,
    ".env": false,
    ".eslintignore": false,
    ".eslintrc.cjs": false,
    ".eslintrc.js": false,
    ".eslintrc.json": false,
    ".github": false,
    ".gitignore": false,
    ".husky": false,
    ".idea": false,
    ".npmrc": false,
    ".nyc_output": false,
    ".nycrc.json": false,
    ".prettierignore": false,
    ".prettierrc.json": false,
    ".trachcan": false,
    ".trachCan": false,
    ".trashcan": false,
    ".vscode": false,
    ".yarnrc": false,
    "**/.trashcan": false,
    "**/package-lock.json": false,
    "**/yarn-error.log": false,
    "aliases.sh": false,
    "aliasLoader.sh": false,
    "bin": false,
    "build": false,
    "CHANGELOG.md": false,
    "coverage": false,
    "cspell.json": false,
    "docker-compose.yml": false,
    "Dockerfile": false,
    "dump.rdb": false,
    "environments": false,
    "esbuild.config.json": false,
    "esbuildEntryPoint.js": false,
    "globals.d.ts": false,
    "jest.config.ts": false,
    "jsconfig.json": false,
    "LICENSE.md": false,
    "newrelic_agent.log": false,
    "node_modules": false,
    "nodemon.json": false,
    "package.json": false,
    "Procfile": false,
    "railway.json": false,
    "README.md": false,
    "requirements": false,
    "temp": false,
    "test/README.md": false,
    "test/tests.svg": false,
    "tests.svg": false,
    "thunder-tests": false,
    "tsconfig.dev.json": false,
    "tsconfig.json": false,
    "webpack.config.js": false,
    "yarn-error.log": false,
    "yarn.lock": false,
    "loader.js": false,
    ".lintstagedrc.cjs": false,
    "lib": false,
    "stryker.conf.mjs": false,
    ".babelrc": false,
    ".stryker-tmp": false,
    "jest.setup.ts": false
  },
  "prettier.configPath": ".prettierrc.json",
  "prettier.endOfLine": "lf",
  "prettier.useTabs": false,
  "todo-tree.tree.showBadges": true,
  "todo-tree.tree.showCountsInTree": false,
  "commit-message-editor.staticTemplate": [
    "feat: Short description",
    "",
    "Message body",
    "",
    "Message footer"
  ],
  "commit-message-editor.dynamicTemplate": [
    "{type}{scope}: {description}",
    "",
    "{body}",
    "",
    "{breaking_change}{footer}"
  ],
  "commit-message-editor.tokens": [
    {
      "label": "Type",
      "name": "type",
      "type": "enum",
      "options": [
        {
          "label": "---",
          "value": ""
        },
        {
          "label": "build",
          "description": "Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)"
        },
        {
          "label": "chore",
          "description": "Updating grunt tasks etc; no production code change"
        },
        {
          "label": "ci",
          "description": "Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)"
        },
        {
          "label": "docs",
          "description": "Documentation only changes"
        },
        {
          "label": "feat",
          "description": "A new feature"
        },
        {
          "label": "fix",
          "description": "A bug fix"
        },
        {
          "label": "perf",
          "description": "A code change that improves performance"
        },
        {
          "label": "refactor",
          "description": "A code change that neither fixes a bug nor adds a feature"
        },
        {
          "label": "revert"
        },
        {
          "label": "style",
          "description": "Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)"
        },
        {
          "label": "test",
          "description": "Adding missing tests or correcting existing tests"
        }
      ],
      "description": "Type of changes"
    },
    {
      "label": "Scope",
      "name": "scope",
      "description": "A scope may be provided to a commitâ€™s type, to provide additional contextual information and is contained within parenthesis, e.g., \"feat(parser): add ability to parse arrays\".",
      "type": "text",
      "multiline": false,
      "prefix": "(",
      "suffix": ")"
    },
    {
      "label": "Short description",
      "name": "description",
      "description": "Short description in the subject line.",
      "type": "text",
      "multiline": false
    },
    {
      "label": "Body",
      "name": "body",
      "description": "Optional body",
      "type": "text",
      "multiline": true,
      "lines": 5,
      "maxLines": 10
    },
    {
      "label": "Breaking change",
      "name": "breaking_change",
      "type": "boolean",
      "value": "BREAKING CHANGE: ",
      "default": false
    },
    {
      "label": "Footer",
      "name": "footer",
      "description": "Optional footer",
      "type": "text",
      "multiline": true
    }
  ],
  "testing.defaultGutterClickAction": "run",
  "jest.jestCommandLine": "npm run test:dev -- --",
  "jest.testExplorer": {
    "showInlineError": "true"
  },
  "jest.coverageFormatter": "GutterFormatter",
  "jest.autoRun": "off"
}
