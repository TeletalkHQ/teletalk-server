{
  "commit-message-editor.dynamicTemplate": [
    "{type}{scope}: {description}",
    "",
    "{body}",
    "",
    "{breaking_change}{footer}"
  ],
  "commit-message-editor.staticTemplate": [
    "feat: Short description",
    "",
    "Message body",
    "",
    "Message footer"
  ],
  "commit-message-editor.tokens": [
    {
      "description": "Type of changes",
      "label": "Type",
      "name": "type",
      "options": [
        {
          "label": "---",
          "value": ""
        },
        {
          "description": "Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)",
          "label": "build"
        },
        {
          "description": "Updating grunt tasks etc; no production code change",
          "label": "chore"
        },
        {
          "description": "Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)",
          "label": "ci"
        },
        {
          "description": "Documentation only changes",
          "label": "docs"
        },
        {
          "description": "A new feature",
          "label": "feat"
        },
        {
          "description": "A bug fix",
          "label": "fix"
        },
        {
          "description": "A code change that improves performance",
          "label": "perf"
        },
        {
          "description": "A code change that neither fixes a bug nor adds a feature",
          "label": "refactor"
        },
        {
          "label": "revert"
        },
        {
          "description": "Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)",
          "label": "style"
        },
        {
          "description": "Adding missing tests or correcting existing tests",
          "label": "test"
        }
      ],
      "type": "enum"
    },
    {
      "description": "A scope may be provided to a commitâ€™s type, to provide additional contextual information and is contained within parenthesis, e.g., \"feat(parser): add ability to parse arrays\".",
      "label": "Scope",
      "multiline": false,
      "name": "scope",
      "prefix": "(",
      "suffix": ")",
      "type": "text"
    },
    {
      "description": "Short description in the subject line.",
      "label": "Short description",
      "multiline": false,
      "name": "description",
      "type": "text"
    },
    {
      "description": "Optional body",
      "label": "Body",
      "lines": 5,
      "maxLines": 10,
      "multiline": true,
      "name": "body",
      "type": "text"
    },
    {
      "default": false,
      "label": "Breaking change",
      "name": "breaking_change",
      "type": "boolean",
      "value": "BREAKING CHANGE: "
    },
    {
      "description": "Optional footer",
      "label": "Footer",
      "multiline": true,
      "name": "footer",
      "type": "text"
    }
  ],
  "editor.codeActionsOnSave": {
    // "source.fixAll": true,
    // "source.sortImports": true
  },
  "editor.tabSize": 2,
  "explorerExclude.backup": {},
  "files.eol": "\n",
  "files.exclude": {
    "**/.git": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/CVS": true,
    "**/.DS_Store": true,
    "**/Thumbs.db": true,
    ".dccache": true,
    ".dockerignore": true,
    ".env": true,
    ".eslintignore": true,
    ".eslintrc.cjs": true,
    ".eslintrc.js": true,
    ".eslintrc.json": true,
    ".github": true,
    ".gitignore": true,
    ".husky": true,
    ".idea": true,
    ".npmrc": true,
    ".nyc_output": true,
    ".nycrc.json": true,
    ".prettierignore": true,
    ".prettierrc.json": true,
    ".trachcan": true,
    ".trachCan": true,
    ".trashcan": true,
    ".vscode": true,
    ".yarnrc": true,
    "**/.trashcan": true,
    "**/package-lock.json": true,
    "**/yarn-error.log": true,
    "aliases.sh": true,
    "aliasLoader.sh": true,
    "bin": true,
    "build": true,
    "CHANGELOG.md": true,
    "coverage": true,
    "cspell.json": true,
    "docker-compose.yml": true,
    "Dockerfile": true,
    "dump.rdb": true,
    "environments": true,
    "esbuild.config.json": true,
    "esbuildEntryPoint.js": true,
    "globals.d.ts": true,
    "jest.config.ts": true,
    "jsconfig.json": true,
    "LICENSE.md": true,
    "newrelic_agent.log": true,
    "node_modules": true,
    "nodemon.json": true,
    "package.json": true,
    "Procfile": true,
    "railway.json": true,
    "README.md": true,
    "requirements": true,
    "temp": true,
    "test/README.md": true,
    "test/tests.svg": true,
    "tests.svg": true,
    "thunder-tests": true,
    "tsconfig.dev.json": true,
    "tsconfig.json": true,
    "webpack.config.js": true,
    "yarn-error.log": true,
    "yarn.lock": true,
    "loader.js": true,
    ".lintstagedrc.cjs": true,
    "lib": true,
    "stryker.conf.mjs": true,
    ".babelrc": true,
    ".stryker-tmp": true,
    "jest.setup.ts": true,
    "scripts": true,
    "index.ts": true,
    "pnpm-lock.yaml": true,
    "public": true,
    "modules": true,
    "notes": true,
    "configs": true,
    ".editorconfig": true,
    ".mocharc.jsonc": true,
    ".nycrc": true
  },
  "jest.autoRun": "off",
  "jest.coverageFormatter": "GutterFormatter",
  "jest.jestCommandLine": "npm run test:dev -- --",
  "jest.testExplorer": {
    "showInlineError": "true"
  },
  "prettier.configPath": ".prettierrc.json",
  "prettier.endOfLine": "lf",
  "prettier.useTabs": false,
  "testing.defaultGutterClickAction": "run",
  "todo-tree.tree.showBadges": true,
  "todo-tree.tree.showCountsInTree": false,
  "typescript.enablePromptUseWorkspaceTsdk": true,
  "typescript.tsdk": "node_modules/typescript/lib"
}
