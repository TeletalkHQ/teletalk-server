{
  "cSpell.words": [],
  "editor.codeActionsOnSave": {
    "source.fixAll": true,
    "source.sortImports": true
  },
  "editor.tabSize": 2,
  "explorerExclude.backup": {},
  "files.eol": "\r\n",
  "files.exclude": {
    ".dccache": true,
    ".dockerignore": true,
    ".env": true,
    ".eslintignore": true,
    ".eslintrc.cjs": true,
    ".eslintrc.js": true,
    ".eslintrc.json": true,
    ".github": true,
    ".gitignore": true,
    ".husky": true,
    ".idea": true,
    ".mocharc.json": true,
    ".npmrc": true,
    ".nyc_output": true,
    ".nycrc.json": true,
    ".prettierignore": true,
    ".prettierrc.json": true,
    ".trachcan": true,
    ".trachCan": true,
    ".trashcan": true,
    ".vscode": true,
    ".yarnrc": true,
    "**/.DS_Store": true,
    "**/.git": true,
    "**/.hg": true,
    "**/.svn": true,
    "**/.trashcan": true,
    "**/CVS": true,
    "**/package-lock.json": true,
    "**/Thumbs.db": true,
    "**/yarn-error.log": true,
    "aliases.sh": true,
    "aliasLoader.sh": true,
    "bin": true,
    "build": true,
    "CHANGELOG.md": true,
    "coverage": true,
    "cspell.json": true,
    "docker-compose.yml": true,
    "Dockerfile": true,
    "dump.rdb": true,
    "environments": true,
    "esbuild.config.json": true,
    "esbuildEntryPoint.js": true,
    "globals.d.ts": true,
    "jest.config.ts": true,
    "jsconfig.json": true,
    "LICENSE.md": true,
    "newrelic_agent.log": true,
    "node_modules": true,
    "nodemon.json": true,
    "package.json": true,
    "Procfile": true,
    "railway.json": true,
    "README.md": true,
    "requirements": true,
    "temp": true,
    "test/mocha.opts": true,
    "test/README.md": true,
    "test/tests.svg": true,
    "tests.svg": true,
    "thunder-tests": true,
    "tsconfig.dev.json": true,
    "tsconfig.json": true,
    "webpack.config.js": true,
    "yarn-error.log": true,
    "yarn.lock": true
  },
  "prettier.configPath": ".prettierrc.json",
  "prettier.endOfLine": "crlf",
  "prettier.useTabs": false,
  "todo-tree.tree.showBadges": true,
  "todo-tree.tree.showCountsInTree": false,
  "commit-message-editor.staticTemplate": [
    "feat: Short description",
    "",
    "Message body",
    "",
    "Message footer"
  ],
  "commit-message-editor.dynamicTemplate": [
    "{type}{scope}: {description}",
    "",
    "{body}",
    "",
    "{breaking_change}{footer}"
  ],
  "commit-message-editor.tokens": [
    {
      "label": "Type",
      "name": "type",
      "type": "enum",
      "options": [
        {
          "label": "---",
          "value": ""
        },
        {
          "label": "build",
          "description": "Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)"
        },
        {
          "label": "chore",
          "description": "Updating grunt tasks etc; no production code change"
        },
        {
          "label": "ci",
          "description": "Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)"
        },
        {
          "label": "docs",
          "description": "Documentation only changes"
        },
        {
          "label": "feat",
          "description": "A new feature"
        },
        {
          "label": "fix",
          "description": "A bug fix"
        },
        {
          "label": "perf",
          "description": "A code change that improves performance"
        },
        {
          "label": "refactor",
          "description": "A code change that neither fixes a bug nor adds a feature"
        },
        {
          "label": "revert"
        },
        {
          "label": "style",
          "description": "Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)"
        },
        {
          "label": "test",
          "description": "Adding missing tests or correcting existing tests"
        }
      ],
      "description": "Type of changes"
    },
    {
      "label": "Scope",
      "name": "scope",
      "description": "A scope may be provided to a commitâ€™s type, to provide additional contextual information and is contained within parenthesis, e.g., \"feat(parser): add ability to parse arrays\".",
      "type": "text",
      "multiline": false,
      "prefix": "(",
      "suffix": ")"
    },
    {
      "label": "Short description",
      "name": "description",
      "description": "Short description in the subject line.",
      "type": "text",
      "multiline": false
    },
    {
      "label": "Body",
      "name": "body",
      "description": "Optional body",
      "type": "text",
      "multiline": true,
      "lines": 5,
      "maxLines": 10
    },
    {
      "label": "Breaking change",
      "name": "breaking_change",
      "type": "boolean",
      "value": "BREAKING CHANGE: ",
      "default": false
    },
    {
      "label": "Footer",
      "name": "footer",
      "description": "Optional footer",
      "type": "text",
      "multiline": true
    }
  ]
}
