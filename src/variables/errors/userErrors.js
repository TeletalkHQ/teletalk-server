const { errorGenerator } = require("@/functions/utilities/generators");
const {
  versionCalculator,
  extractVersions,
} = require("@/functions/utilities/utilsNoDeps");

const USER_ERROR_KEYS = {
  BIO_VALIDATION: "BIO_VALIDATION",
  BLACKLIST_VALIDATION: "BLACKLIST_VALIDATION",
  CELLPHONE_VALIDATION: "CELLPHONE_VALIDATION",
  CONTACT_VALIDATION: "CONTACT_VALIDATION",
  CONTACT_ITEM_VALIDATION: "CONTACT_ITEM_VALIDATION",
  COUNTRY_CODE_VALIDATION: "COUNTRY_CODE_VALIDATION",
  COUNTRY_NAME_VALIDATION: "COUNTRY_NAME_VALIDATION",
  COUNTRY_NOT_SUPPORTED_VALIDATION: "COUNTRY_NOT_SUPPORTED_VALIDATION",
  CREATED_AT_VALIDATION: "CREATED_AT_VALIDATION",
  FIRST_NAME_VALIDATION: "FIRST_NAME_VALIDATION",
  FULL_NAME_VALIDATION: "FULL_NAME_VALIDATION",
  LAST_NAME_VALIDATION: "LAST_NAME_VALIDATION",
  MAC_ADDRESS_VALIDATION: "MAC_ADDRESS_VALIDATION",
  PHONE_NUMBER_VALIDATION: "PHONE_NUMBER_VALIDATION",
  PRIVATE_ID_VALIDATION: "PRIVATE_ID_VALIDATION",
  SELF_STUFF_VALIDATION: "SELF_STUFF_VALIDATION",
  TARGET_USER_VALIDATION: "TARGET_USER_VALIDATION",
  TOKEN_VALIDATION: "TOKEN_VALIDATION",
  USER_VALIDATION: "USER_VALIDATION",
  USERNAME_VALIDATION: "USERNAME_VALIDATION",
  VERIFICATION_CODE_VALIDATION: "VERIFICATION_CODE_VALIDATION",
};

const {
  BIO_VALIDATION,
  BLACKLIST_VALIDATION,
  CELLPHONE_VALIDATION,
  CONTACT_VALIDATION,
  COUNTRY_CODE_VALIDATION,
  COUNTRY_NAME_VALIDATION,
  COUNTRY_NOT_SUPPORTED_VALIDATION,
  CREATED_AT_VALIDATION,
  FIRST_NAME_VALIDATION,
  FULL_NAME_VALIDATION,
  LAST_NAME_VALIDATION,
  MAC_ADDRESS_VALIDATION,
  PHONE_NUMBER_VALIDATION,
  PRIVATE_ID_VALIDATION,
  SELF_STUFF_VALIDATION,
  TARGET_USER_VALIDATION,
  TOKEN_VALIDATION,
  USER_VALIDATION,
  USERNAME_VALIDATION,
  VERIFICATION_CODE_VALIDATION,
} = USER_ERROR_KEYS;

const BIO_INVALID_TYPE = errorGenerator(
  4024,
  400,
  "",
  "BIO_INVALID_TYPE",
  "1.0.0",
  BIO_VALIDATION
);

const BIO_MAXLENGTH_REACH = errorGenerator(
  4025,
  400,
  "",
  "BIO_MAXLENGTH_REACH",
  "1.0.0",
  BIO_VALIDATION
);

const BIO_MINLENGTH_REACH = errorGenerator(
  4026,
  400,
  "",
  "BIO_MINLENGTH_REACH",
  "1.0.0",
  BIO_VALIDATION
);

const BLACKLIST_ITEM_EXIST = errorGenerator(
  4000,
  400,
  "blacklist item is already exist",
  "BLACKLIST_ITEM_EXIST",
  "1.0.0",
  BLACKLIST_VALIDATION
);

const BLACKLIST_INVALID_TYPE = errorGenerator(
  4023,
  400,
  "",
  "BLACKLIST_INVALID_TYPE",
  "1.0.0",
  BLACKLIST_VALIDATION
);

const BLACKLIST_ITEM_NOT_EXIST = errorGenerator(
  4000,
  400,
  "blacklist item is not exist",
  "BLACKLIST_ITEM_NOT_EXIST",
  "1.0.0",
  BLACKLIST_VALIDATION
);

const CELLPHONE_EXIST = errorGenerator(
  4027,
  400,
  "",
  "CELLPHONE_EXIST",
  "1.0.0",
  CELLPHONE_VALIDATION
);

const CELLPHONE_INVALID = errorGenerator(
  4028,
  400,
  "",
  "CELLPHONE_INVALID",
  "1.0.0",
  CELLPHONE_VALIDATION
);

const CELLPHONE_NOT_EXIST = errorGenerator(
  4031,
  400,
  "",
  "CELLPHONE_NOT_EXIST",
  "1.0.0",
  CELLPHONE_VALIDATION
);

const CELLPHONE_REQUIRED = errorGenerator(
  4032,
  400,
  "",
  "CELLPHONE_REQUIRED",
  "1.0.0",
  CELLPHONE_VALIDATION
);

const CELLPHONE_EXIST_IN_CONTACT = errorGenerator(
  4033,
  400,
  "",
  "CELLPHONE_EXIST_IN_CONTACT",
  "1.0.0",
  CELLPHONE_VALIDATION
);

const CONTACT_INVALID_TYPE = errorGenerator(
  4034,
  400,
  "",
  "CONTACT_INVALID_TYPE",
  "1.0.0",
  CONTACT_VALIDATION
);

const CONTACT_ITEM_EXIST = errorGenerator(
  4000,
  400,
  "Contact item is already exist",
  "CONTACT_ITEM_EXIST",
  "1.0.0",
  CONTACT_VALIDATION
);

const CONTACT_ITEM_NOT_EXIST = errorGenerator(
  4000,
  400,
  "Contact item is not exist",
  "CONTACT_ITEM_NOT_EXIST",
  "1.0.0",
  CONTACT_VALIDATION
);

const COUNTRY_CODE_INVALID_TYPE = errorGenerator(
  4035,
  400,
  "",
  "COUNTRY_CODE_INVALID_TYPE",
  "1.0.0",
  COUNTRY_CODE_VALIDATION
);

const COUNTRY_CODE_NUMERIC = errorGenerator(
  4035,
  400,
  "",
  "COUNTRY_CODE_NUMERIC",
  "1.0.0",
  COUNTRY_CODE_VALIDATION
);

const COUNTRY_CODE_INVALID = errorGenerator(
  4035,
  400,
  "",
  "COUNTRY_CODE_INVALID",
  "1.0.0",
  COUNTRY_CODE_VALIDATION
);

const COUNTRY_CODE_NOT_SUPPORTED = errorGenerator(
  4035,
  400,
  "",
  "COUNTRY_CODE_NOT_SUPPORTED",
  "1.0.0",
  COUNTRY_CODE_VALIDATION
);

const COUNTRY_CODE_MAXLENGTH_REACH = errorGenerator(
  4036,
  400,
  "",
  "COUNTRY_CODE_MAXLENGTH_REACH",
  "1.0.0",
  COUNTRY_CODE_VALIDATION
);

const COUNTRY_CODE_MINLENGTH_REACH = errorGenerator(
  4037,
  400,
  "",
  "COUNTRY_CODE_MINLENGTH_REACH",
  "1.0.0",
  COUNTRY_CODE_VALIDATION
);

const COUNTRY_CODE_REQUIRED = errorGenerator(
  4038,
  400,
  "",
  "COUNTRY_CODE_REQUIRED",
  "1.0.0",
  COUNTRY_CODE_VALIDATION
);

const COUNTRY_NOT_SUPPORTED = errorGenerator(
  4035,
  400,
  "",
  "COUNTRY_NOT_SUPPORTED",
  "1.0.0",
  COUNTRY_NOT_SUPPORTED_VALIDATION
);

const COUNTRY_NAME_NOT_SUPPORTED = errorGenerator(
  4035,
  400,
  "",
  "COUNTRY_NAME_NOT_SUPPORTED",
  "1.0.0",
  COUNTRY_NAME_VALIDATION
);

const COUNTRY_NAME_INVALID = errorGenerator(
  4039,
  400,
  "",
  "COUNTRY_NAME_INVALID",
  "1.0.0",
  COUNTRY_NAME_VALIDATION
);

const COUNTRY_NAME_INVALID_TYPE = errorGenerator(
  4039,
  400,
  "",
  "COUNTRY_NAME_INVALID_TYPE",
  "1.0.0",
  COUNTRY_NAME_VALIDATION
);

const COUNTRY_NAME_MAXLENGTH_REACH = errorGenerator(
  4040,
  400,
  "",
  "COUNTRY_NAME_MAXLENGTH_REACH",
  "1.0.0",
  COUNTRY_NAME_VALIDATION
);

const COUNTRY_NAME_MINLENGTH_REACH = errorGenerator(
  4041,
  400,
  "",
  "COUNTRY_NAME_MINLENGTH_REACH",
  "1.0.0",
  COUNTRY_NAME_VALIDATION
);

const COUNTRY_NAME_REQUIRED = errorGenerator(
  4042,
  400,
  "",
  "COUNTRY_NAME_REQUIRED",
  "1.0.0",
  COUNTRY_NAME_VALIDATION
);

const CREATED_AT_INVALID_TYPE = errorGenerator(
  4043,
  400,
  "",
  "CREATED_AT_INVALID_TYPE",
  "1.0.0",
  CREATED_AT_VALIDATION
);

const FIRST_NAME_INVALID_TYPE = errorGenerator(
  4044,
  400,
  "",
  "FIRST_NAME_INVALID_TYPE",
  "1.0.0",
  FIRST_NAME_VALIDATION
);

const FIRST_NAME_MAXLENGTH_REACH = errorGenerator(
  4045,
  400,
  "",
  "FIRST_NAME_MAXLENGTH_REACH",
  "1.0.0",
  FIRST_NAME_VALIDATION
);

const FIRST_NAME_MINLENGTH_REACH = errorGenerator(
  4046,
  400,
  "",
  "FIRST_NAME_MINLENGTH_REACH",
  "1.0.0",
  FIRST_NAME_VALIDATION
);

const FIRST_NAME_REQUIRED = errorGenerator(
  4047,
  400,
  "",
  "FIRST_NAME_REQUIRED",
  "1.0.0",
  FIRST_NAME_VALIDATION
);

const LAST_NAME_INVALID = errorGenerator(
  4048,
  400,
  "",
  "LAST_NAME_INVALID",
  "1.0.0",
  LAST_NAME_VALIDATION
);

const LAST_NAME_INVALID_TYPE = errorGenerator(
  4048,
  400,
  "",
  "LAST_NAME_INVALID_TYPE",
  "1.0.0",
  LAST_NAME_VALIDATION
);

const LAST_NAME_MAXLENGTH_REACH = errorGenerator(
  4049,
  400,
  "",
  "LAST_NAME_MAXLENGTH_REACH",
  "1.0.0",
  LAST_NAME_VALIDATION
);

const LAST_NAME_MINLENGTH_REACH = errorGenerator(
  4050,
  400,
  "",
  "LAST_NAME_MINLENGTH_REACH",
  "1.0.0",
  LAST_NAME_VALIDATION
);

const MAC_ADDRESS_EXIST = errorGenerator(
  4051,
  400,
  "",
  "MAC_ADDRESS_EXIST",
  "1.0.0",
  MAC_ADDRESS_VALIDATION
);

const MAC_ADDRESS_INVALID_TYPE = errorGenerator(
  4052,
  400,
  "",
  "MAC_ADDRESS_INVALID_TYPE",
  "1.0.0",
  MAC_ADDRESS_VALIDATION
);

const MAC_ADDRESS_MAXLENGTH_REACH = errorGenerator(
  4053,
  400,
  "",
  "MAC_ADDRESS_MAXLENGTH_REACH",
  "1.0.0",
  MAC_ADDRESS_VALIDATION
);

const MAC_ADDRESS_MINLENGTH_REACH = errorGenerator(
  4054,
  400,
  "",
  "MAC_ADDRESS_MINLENGTH_REACH",
  "1.0.0",
  MAC_ADDRESS_VALIDATION
);

const MAC_ADDRESS_REQUIRED = errorGenerator(
  4055,
  400,
  "",
  "MAC_ADDRESS_REQUIRED",
  "1.0.0",
  MAC_ADDRESS_VALIDATION
);

const FULL_NAME_INVALID = errorGenerator(
  4056,
  400,
  "",
  "FULL_NAME_INVALID",
  "1.0.0",
  FULL_NAME_VALIDATION
);

const PHONE_NUMBER_INVALID_TYPE = errorGenerator(
  4056,
  400,
  "",
  "PHONE_NUMBER_INVALID_TYPE",
  "1.0.0",
  PHONE_NUMBER_VALIDATION
);

const PHONE_NUMBER_INVALID = errorGenerator(
  4000,
  400,
  "",
  "PHONE_NUMBER_INVALID",
  "1.0.0",
  PHONE_NUMBER_VALIDATION
);

const PHONE_NUMBER_EXIST = errorGenerator(
  4057,
  400,
  "",
  "PHONE_NUMBER_EXIST",
  "1.0.0",
  PHONE_NUMBER_VALIDATION
);

const PHONE_NUMBER_REQUIRED = errorGenerator(
  4058,
  400,
  "",
  "PHONE_NUMBER_REQUIRED",
  "1.0.0",
  PHONE_NUMBER_VALIDATION
);

const PHONE_NUMBER_MINLENGTH_REACH = errorGenerator(
  4059,
  400,
  "",
  "PHONE_NUMBER_MINLENGTH_REACH",
  "1.0.0",
  PHONE_NUMBER_VALIDATION
);

const PHONE_NUMBER_MAXLENGTH_REACH = errorGenerator(
  4060,
  400,
  "",
  "PHONE_NUMBER_MAXLENGTH_REACH",
  "1.0.0",
  PHONE_NUMBER_VALIDATION
);

const PHONE_NUMBER_NUMERIC = errorGenerator(
  4060,
  400,
  "",
  "PHONE_NUMBER_NUMERIC",
  "1.0.0",
  PHONE_NUMBER_VALIDATION
);

const PRIVATE_ID_EXIST = errorGenerator(
  4061,
  400,
  "",
  "PRIVATE_ID_EXIST",
  "1.0.0",
  PRIVATE_ID_VALIDATION
);

const PRIVATE_ID_INVALID_TYPE = errorGenerator(
  4062,
  400,
  "",
  "PRIVATE_ID_INVALID_TYPE",
  "1.0.0",
  PRIVATE_ID_VALIDATION
);

const PRIVATE_ID_INVALID = errorGenerator(
  4065,
  400,
  "",
  "PRIVATE_ID_INVALID",
  "1.0.0",
  PRIVATE_ID_VALIDATION
);

const PRIVATE_ID_MAX_LENGTH_REACH = errorGenerator(
  4063,
  400,
  "",
  "PRIVATE_ID_MAX_LENGTH_REACH",
  "1.0.0",
  PRIVATE_ID_VALIDATION
);

const PRIVATE_ID_MIN_LENGTH_REACH = errorGenerator(
  4064,
  400,
  "",
  "PRIVATE_ID_MIN_LENGTH_REACH",
  "1.0.0",
  PRIVATE_ID_VALIDATION
);

const PRIVATE_ID_REQUIRED = errorGenerator(
  4065,
  400,
  "",
  "PRIVATE_ID_REQUIRED",
  "1.0.0",
  PRIVATE_ID_VALIDATION
);

const SELF_STUFF = errorGenerator(
  4066,
  400,
  "",
  "SELF_STUFF",
  "1.0.0",
  SELF_STUFF_VALIDATION
);

const TARGET_USER_NOT_EXIST = errorGenerator(
  4070,
  400,
  "target user not exist",
  "TARGET_USER_NOT_EXIST",
  "1.0.0",
  TARGET_USER_VALIDATION
);

const TOKEN_EXIST = errorGenerator(
  4067,
  400,
  "",
  "TOKEN_EXIST",
  "1.0.0",
  TOKEN_VALIDATION
);

const TOKEN_REQUIRED = errorGenerator(
  4068,
  401,
  "",
  "TOKEN_REQUIRED",
  "1.0.0",
  TOKEN_VALIDATION
);

const TOKEN_INVALID = errorGenerator(
  4069,
  401,
  "",
  "TOKEN_INVALID",
  "1.0.0",
  TOKEN_VALIDATION
);

const TOKEN_CAN_NOT_VERIFIED = errorGenerator(
  4069,
  401,
  "",
  "TOKEN_CAN_NOT_VERIFIED",
  "1.0.0",
  TOKEN_VALIDATION
);

const TOKEN_INVALID_TYPE = errorGenerator(
  4069,
  401,
  "",
  "TOKEN_INVALID_TYPE",
  "1.0.0",
  TOKEN_VALIDATION
);

const USER_NOT_EXIST = errorGenerator(
  4070,
  400,
  "user not exist",
  "USER_NOT_EXIST",
  "1.0.0",
  USER_VALIDATION
);

const USERNAME_EXIST = errorGenerator(
  4071,
  400,
  "",
  "USERNAME_EXIST",
  "1.0.0",
  USERNAME_VALIDATION
);

const USERNAME_INVALID_TYPE = errorGenerator(
  4072,
  400,
  "",
  "USERNAME_INVALID_TYPE",
  "1.0.0",
  USERNAME_VALIDATION
);

const USERNAME_INVALID = errorGenerator(
  4072,
  400,
  "",
  "USERNAME_INVALID",
  "1.0.0",
  USERNAME_VALIDATION
);

const USERNAME_REQUIRED = errorGenerator(
  4072,
  400,
  "",
  "USERNAME_REQUIRED",
  "1.0.0",
  USERNAME_VALIDATION
);

const USERNAME_MAXLENGTH_REACH = errorGenerator(
  4073,
  400,
  "",
  "USERNAME_MAXLENGTH_REACH",
  "1.0.0",
  USERNAME_VALIDATION
);

const USERNAME_MINLENGTH_REACH = errorGenerator(
  4074,
  400,
  "",
  "USERNAME_MINLENGTH_REACH",
  "1.0.0",
  USERNAME_VALIDATION
);

const VERIFICATION_CODE_INVALID = errorGenerator(
  4075,
  400,
  "Wrong verification code",
  "VERIFICATION_CODE_INVALID",
  "1.0.0",
  VERIFICATION_CODE_VALIDATION
);

const VERIFICATION_CODE_REQUIRED = errorGenerator(
  4075,
  400,
  "Wrong verification code",
  "VERIFICATION_CODE_REQUIRED",
  "1.0.0",
  VERIFICATION_CODE_VALIDATION
);

const VERIFICATION_CODE_INVALID_TYPE = errorGenerator(
  4076,
  400,
  "",
  "VERIFICATION_CODE_INVALID_TYPE",
  "1.0.0",
  VERIFICATION_CODE_VALIDATION
);

const VERIFICATION_CODE_NUMERIC = errorGenerator(
  4076,
  400,
  "",
  "VERIFICATION_CODE_NUMERIC",
  "1.0.0",
  VERIFICATION_CODE_VALIDATION
);

const VERIFICATION_CODE_EMPTY = errorGenerator(
  4076,
  400,
  "",
  "VERIFICATION_CODE_EMPTY",
  "1.0.0",
  VERIFICATION_CODE_VALIDATION
);

const VERIFICATION_CODE_INVALID_LENGTH = errorGenerator(
  4077,
  400,
  "",
  "VERIFICATION_CODE_INVALID_LENGTH",
  "1.0.0",
  VERIFICATION_CODE_VALIDATION
);

const errors = {
  BIO_INVALID_TYPE,
  BIO_MAXLENGTH_REACH,
  BIO_MINLENGTH_REACH,
  BLACKLIST_INVALID_TYPE,
  BLACKLIST_ITEM_EXIST,
  BLACKLIST_ITEM_NOT_EXIST,
  CELLPHONE_EXIST,
  CELLPHONE_EXIST_IN_CONTACT,
  CELLPHONE_INVALID,
  CELLPHONE_NOT_EXIST,
  CELLPHONE_REQUIRED,
  CONTACT_INVALID_TYPE,
  CONTACT_ITEM_EXIST,
  CONTACT_ITEM_NOT_EXIST,
  COUNTRY_CODE_INVALID,
  COUNTRY_CODE_INVALID_TYPE,
  COUNTRY_CODE_MAXLENGTH_REACH,
  COUNTRY_CODE_MINLENGTH_REACH,
  COUNTRY_CODE_NOT_SUPPORTED,
  COUNTRY_CODE_NUMERIC,
  COUNTRY_CODE_REQUIRED,
  COUNTRY_NAME_INVALID,
  COUNTRY_NAME_INVALID_TYPE,
  COUNTRY_NAME_MAXLENGTH_REACH,
  COUNTRY_NAME_MINLENGTH_REACH,
  COUNTRY_NAME_NOT_SUPPORTED,
  COUNTRY_NAME_REQUIRED,
  COUNTRY_NOT_SUPPORTED,
  CREATED_AT_INVALID_TYPE,
  FIRST_NAME_INVALID_TYPE,
  FIRST_NAME_MAXLENGTH_REACH,
  FIRST_NAME_MINLENGTH_REACH,
  FIRST_NAME_REQUIRED,
  FULL_NAME_INVALID,
  LAST_NAME_INVALID,
  LAST_NAME_INVALID_TYPE,
  LAST_NAME_MAXLENGTH_REACH,
  LAST_NAME_MINLENGTH_REACH,
  MAC_ADDRESS_EXIST,
  MAC_ADDRESS_INVALID_TYPE,
  MAC_ADDRESS_MAXLENGTH_REACH,
  MAC_ADDRESS_MINLENGTH_REACH,
  MAC_ADDRESS_REQUIRED,
  PHONE_NUMBER_EXIST,
  PHONE_NUMBER_INVALID,
  PHONE_NUMBER_INVALID_TYPE,
  PHONE_NUMBER_MAXLENGTH_REACH,
  PHONE_NUMBER_MINLENGTH_REACH,
  VERIFICATION_CODE_EMPTY,
  PHONE_NUMBER_NUMERIC,
  PHONE_NUMBER_REQUIRED,
  PRIVATE_ID_EXIST,
  PRIVATE_ID_INVALID,
  PRIVATE_ID_INVALID_TYPE,
  PRIVATE_ID_MAX_LENGTH_REACH,
  PRIVATE_ID_MIN_LENGTH_REACH,
  PRIVATE_ID_REQUIRED,
  SELF_STUFF,
  TARGET_USER_NOT_EXIST,
  TOKEN_CAN_NOT_VERIFIED,
  TOKEN_EXIST,
  TOKEN_INVALID,
  TOKEN_INVALID_TYPE,
  TOKEN_REQUIRED,
  USER_NOT_EXIST,
  USERNAME_EXIST,
  USERNAME_INVALID,
  USERNAME_INVALID_TYPE,
  USERNAME_MAXLENGTH_REACH,
  USERNAME_MINLENGTH_REACH,
  USERNAME_REQUIRED,
  VERIFICATION_CODE_INVALID,
  VERIFICATION_CODE_INVALID_LENGTH,
  VERIFICATION_CODE_INVALID_TYPE,
  VERIFICATION_CODE_REQUIRED,
  VERIFICATION_CODE_NUMERIC,
};

const userErrors = {
  version: versionCalculator(extractVersions(errors)),
  ...errors,
};

module.exports = {
  userErrors,
};
